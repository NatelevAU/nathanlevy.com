name: Reverse Deployment

on:
  workflow_dispatch:

env:
  PROD_BRANCH: 'main'
  DEV_BRANCH: 'dev'

jobs:
  reverse_deploy_prod:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client rsync
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan "${{ vars.DEPLOY_HOSTNAME }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Reverse the most recent production deployment
        run: |
          RELEASE_BASE="/var/www/${{ vars.APP_NAME }}"
          SECOND_LAST_RELEASE=$(ssh deploy@${{ vars.DEPLOY_HOSTNAME }} "ls -t ${RELEASE_BASE}/releases | sed -n '2p'")
          ssh deploy@${{ vars.DEPLOY_HOSTNAME }} "ln -nfs ${RELEASE_BASE}/releases/${SECOND_LAST_RELEASE} ${RELEASE_BASE}/current"

  reverse_deploy_dev:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client rsync
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan "${{ vars.DEPLOY_HOSTNAME }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Reverse the most recent development deployment
        run: |
          RELEASE_BASE="/var/www/dev-${{ vars.APP_NAME }}"
          SECOND_LAST_RELEASE=$(ssh deploy@${{ vars.DEPLOY_HOSTNAME }} "ls -t ${RELEASE_BASE}/releases | sed -n '2p'")
          ssh deploy@${{ vars.DEPLOY_HOSTNAME }} "ln -nfs ${RELEASE_BASE}/releases/${SECOND_LAST_RELEASE} ${RELEASE_BASE}/current"
